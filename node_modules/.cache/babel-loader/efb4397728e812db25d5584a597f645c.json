{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-tryunfo/src/App.js\";\nimport React from 'react';\nimport Card from './components/Card';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handlechange = ({\n      target: {\n        name,\n        value,\n        checked,\n        type\n      }\n    }) => {\n      const newValue = type === 'checkbox' ? checked : value;\n\n      if (['cardAttr1', 'cardAttr2', 'cardAttr3'].includes(name)) {\n        return this.setNewValue({\n          name,\n          value: parseInt(newValue, 10)\n        });\n      }\n\n      return this.setNewValue({\n        name,\n        value: newValue\n      });\n    };\n\n    this.onSaveButtonClick = () => {\n      const { ...newCard\n      } = { ...this.state\n      };\n      delete newCard.hasTrunfo;\n      delete newCard.isSaveButtonDisabled;\n      newCard.allCards.push(newCard);\n      const updatedCardDeck = newCard.allCards;\n      delete newCard.allCards;\n      this.setState({\n        allCards: updatedCardDeck\n      }, this.resetState());\n    };\n\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '',\n      cardAttr2: '',\n      cardAttr3: '',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n      allCards: []\n    };\n  }\n\n  setNewValue({\n    name,\n    value\n  }) {\n    this.setState({\n      [name]: value\n    }, this.validateFormData);\n  }\n\n  setDisabledSaveButtonState(val) {\n    this.setState({\n      isSaveButtonDisabled: val\n    });\n  }\n\n  hasEmptyFields() {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardRare\n    } = this.state;\n    return [cardName, cardDescription, cardImage, cardRare].some(field => field === '');\n  }\n\n  hasWrongAttrValues(attr) {\n    const minValue = 0;\n    const maxValue = 90;\n    return attr < minValue || attr > maxValue || attr !== 0 && !attr;\n  }\n\n  hasWrongSum(attrs) {\n    const maxSum = 210;\n    const actualSum = attrs.reduce((sum, attr) => sum + parseInt(attr, 10), 0);\n    return actualSum > maxSum;\n  }\n\n  hasWrongAttrs() {\n    const {\n      cardAttr1,\n      cardAttr2,\n      cardAttr3\n    } = this.state;\n    const attrs = [cardAttr1, cardAttr2, cardAttr3];\n    return this.hasWrongSum(attrs) || attrs.some(this.hasWrongAttrValues);\n  }\n\n  resetState() {\n    this.setState({\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: 0,\n      cardAttr2: 0,\n      cardAttr3: 0,\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true\n    });\n  }\n\n  validateFormData() {\n    if (this.hasEmptyFields() || this.hasWrongAttrs()) {\n      this.setDisabledSaveButtonState(true);\n    } else {\n      this.setDisabledSaveButtonState(false);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, { ...this.state,\n        onInputChange: this.handlechange,\n        onSaveButtonClick: this.onSaveButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, { ...this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-tryunfo/src/App.js"],"names":["React","Card","Form","App","Component","constructor","handlechange","target","name","value","checked","type","newValue","includes","setNewValue","parseInt","onSaveButtonClick","newCard","state","hasTrunfo","isSaveButtonDisabled","allCards","push","updatedCardDeck","setState","resetState","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","validateFormData","setDisabledSaveButtonState","val","hasEmptyFields","some","field","hasWrongAttrValues","attr","minValue","maxValue","hasWrongSum","attrs","maxSum","actualSum","reduce","sum","hasWrongAttrs","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from './components/Card';\nimport Form from './components/Form';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '',\n      cardAttr2: '',\n      cardAttr3: '',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n      allCards: [],\n    };\n  }\n\n  handlechange = ({ target: { name, value, checked, type } }) => {\n    const newValue = type === 'checkbox' ? checked : value;\n    if (['cardAttr1', 'cardAttr2', 'cardAttr3'].includes(name)) {\n      return this.setNewValue({ name, value: parseInt(newValue, 10) });\n    }\n    return this.setNewValue({ name, value: newValue });\n  }\n\n  onSaveButtonClick = () => {\n    const { ...newCard } = { ...this.state };\n    delete newCard.hasTrunfo;\n    delete newCard.isSaveButtonDisabled;\n    newCard.allCards.push(newCard);\n    const updatedCardDeck = newCard.allCards;\n    delete newCard.allCards;\n    this.setState({ allCards: updatedCardDeck }, this.resetState());\n  }\n\n  setNewValue({ name, value }) {\n    this.setState({\n      [name]: value,\n    }, this.validateFormData);\n  }\n\n  setDisabledSaveButtonState(val) {\n    this.setState({ isSaveButtonDisabled: val });\n  }\n\n  hasEmptyFields() {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardRare,\n    } = this.state;\n    return [cardName, cardDescription, cardImage, cardRare]\n      .some((field) => field === '');\n  }\n\n  hasWrongAttrValues(attr) {\n    const minValue = 0;\n    const maxValue = 90;\n    return attr < minValue || attr > maxValue || (attr !== 0 && !attr);\n  }\n\n  hasWrongSum(attrs) {\n    const maxSum = 210;\n    const actualSum = attrs.reduce((sum, attr) => sum + parseInt(attr, 10), 0);\n    return actualSum > maxSum;\n  }\n\n  hasWrongAttrs() {\n    const { cardAttr1, cardAttr2, cardAttr3 } = this.state;\n    const attrs = [cardAttr1, cardAttr2, cardAttr3];\n    return this.hasWrongSum(attrs) || attrs.some(this.hasWrongAttrValues);\n  }\n\n  resetState() {\n    this.setState({\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: 0,\n      cardAttr2: 0,\n      cardAttr3: 0,\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n    });\n  }\n\n  validateFormData() {\n    if (this.hasEmptyFields() || this.hasWrongAttrs()) {\n      this.setDisabledSaveButtonState(true);\n    } else {\n      this.setDisabledSaveButtonState(false);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Form\n          { ...this.state }\n          onInputChange={ this.handlechange }\n          onSaveButtonClick={ this.onSaveButtonClick }\n        />\n\n        <Card\n          { ...this.state }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}